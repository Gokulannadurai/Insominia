_id: req_c09d822ce903427cb21bbf7d051aaabb
type: Request
parentId: wrk_78c15a14717a492380b42ce940880385
modified: 1694700671349
created: 1694700592592
url: https://ccinboxdev.netsmartcloud.com/servlet
name: sendMessage
description: ""
method: POST
body:
  mimeType: application/json
  text: >-
    {
    	"uri": "/InboxServlet/sendMessage",
    	"ntstOrgId": "dev-pov",
    	"methodType": "POST",
    	"serviceName": "ccinbox",
    	"payload": {
    		"body": "",
    		"memberId": "82",
    		"attachments": [
    			{
    				"contents": "<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="NTSTCCDStyles.xsl"?><ClinicalDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:hl7-org:v3" xsi:schemaLocation="urn:hl7-org:v3 CDA.xsd">  <realmCode code="US"/>  <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>  <templateId root="2.16.840.1.113883.10.20.22.1.2" extension="2015-08-01"/>  <templateId root="2.16.840.1.113883.10.20.22.1.1" extension="2015-08-01"/>  <templateId root="2.16.840.1.113883.10.20.22.1.1"/>  <id root="2.16.840.1.113883.19.5.99999.1" extension="bd2576dc-6b80-43f5-a2dd-a8e1f87a7e64"/>  <code code="34133-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Summary of Episode Note"/>  <title>Clinical Document</title>  <effectiveTime value="20230914100850"/>  <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25"/>  <languageCode code="ES"/>  <recordTarget>    <patientRole>      <id root="2.16.840.1.113883.3.3569.0" extension="1" assigningAuthorityName="NY Netsmart Technologies, Inc."/>      <id root="2.16.840.1.113883.4.1" extension="111115597"/>      <addr use="H"><state>AL</state><postalCode>36542</postalCode><city>Gulf Shores</city><streetAddressLine>9145 SCHOENER RD #6</streetAddressLine></addr>      <telecom value="+1(555)-555-5559" use="HP"/>      <telecom value="" use="WP"/>      <patient>        <name><given>HEIGHDEE</given><family>DURHAM</family></name>        <name><given qualifier="BR">BILL</given><family>BAKER</family></name>        <name><given qualifier="BR">Heighdee</given><family>Durham</family></name>        <administrativeGenderCode code="F" codeSystem="2.16.840.1.113883.5.1" codeSystemName="AdministrativeGender" displayName="Female"/>        <birthTime value="19781008"/>        <maritalStatusCode/>        <raceCode code="1002-5" codeSystem="2.16.840.1.113883.6.238" displayName="American Indian or Alaska Native"/>        <ethnicGroupCode nullFlavor="UNK"/>        <languageCommunication>          <languageCode code="es"/>        </languageCommunication>      </patient>    </patientRole>  </recordTarget>  <author>    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>    <time value="20230914140850"/>    <assignedAuthor>      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>      <addr use="WP"><state>MO</state><postalCode>64153</postalCode><city>Kansas City</city><streetAddressLine>611 NE 93rd CT</streetAddressLine></addr>      <telecom value="+1(999)-999-9999" use="WP"/>      <assignedPerson>        <name><given>JAMES</given><family>PIKE</family></name>      </assignedPerson>      <representedOrganization>        <id root="2.16.840.1.113883.4.6" extension="98"/>        <name>NY Netsmart Technologies, Inc.</name>        <telecom value="800-421-7503"/>        <addr use="WP"><state>NY</state><postalCode>11739</postalCode><city>Great River</city><streetAddressLine>3500 Sunrise Highway</streetAddressLine></addr>      </representedOrganization>    </assignedAuthor>  </author>  <custodian>    <assignedCustodian>      <representedCustodianOrganization>        <id root="2.16.840.1.113883.4.6" extension="98"/>        <name>NY Netsmart Technologies, Inc.</name>        <telecom value="800-421-7503"/>        <addr use="WP"><state>NY</state><postalCode>11739</postalCode><city>Great River</city><streetAddressLine>3500 Sunrise Highway</streetAddressLine></addr>      </representedCustodianOrganization>    </assignedCustodian>  </custodian>  <documentationOf>    <serviceEvent classCode="PCPR">      <effectiveTime>        <low value="20220914000000"/>        <high value="20230914235959"/>      </effectiveTime>      <performer typeCode="PPRF">        <functionCode code="PCP" codeSystem="2.16.840.1.113883.6.96" displayName="Primary Care Physician"/>        <assignedEntity>          <id root="2.16.840.1.113883.4.6" extension="9876543223"/>          <telecom value="913-000-0000"/>          <assignedPerson>            <name><given>Dev</given><family>Physician</family></name>          </assignedPerson>          <representedOrganization classCode="ORG">            <id root="2.16.840.1.113883.3.3569.0"/>            <name>NY Netsmart Technologies, Inc.</name>          </representedOrganization>        </assignedEntity>      </performer>      <performer typeCode="PPRF">        <functionCode code="ATTPHYS" codeSystem="2.16.840.1.113883.6.96" displayName="Attending Physician"/>        <assignedEntity>          <id root="2.16.840.1.113883.4.6" extension="80840123456789"/>          <addr use="WP"><state>MO</state><postalCode>64153</postalCode><city>Kansas City</city><streetAddressLine>611 NE 93rd CT</streetAddressLine></addr>          <telecom value="999-999-9999"/>          <assignedPerson>            <name><given>James</given><family>Pike</family></name>          </assignedPerson>          <representedOrganization classCode="ORG">            <id root="2.16.840.1.113883.3.3569.0"/>            <name>NY Netsmart Technologies, Inc.</name>          </representedOrganization>        </assignedEntity>      </performer>      <performer typeCode="PPRF">        <functionCode code="ATTPHYS" codeSystem="2.16.840.1.113883.6.96" displayName="Attending Physician"/>        <assignedEntity>          <id root="2.16.840.1.113883.4.6" extension="1952337446"/>          <telecom value="913-444-5959"/>          <assignedPerson>            <name><given>Paul</given><family>Allwin</family></name>          </assignedPerson>          <representedOrganization classCode="ORG">            <id root="2.16.840.1.113883.3.3569.0"/>            <name>NY Netsmart Technologies, Inc.</name>          </representedOrganization>        </assignedEntity>      </performer>      <performer typeCode="PPRF">        <functionCode code="ADMPHYS" codeSystem="2.16.840.1.113883.6.96" displayName="Admitting Physician"/>        <assignedEntity>          <id root="2.16.840.1.113883.4.6" extension="TESTY"/>          <telecom value="968-2038"/>          <assignedPerson>            <name><given>Steven</given><family>Stein</family></name>          </assignedPerson>          <representedOrganization classCode="ORG">            <id root="2.16.840.1.113883.3.3569.0"/>            <name>NY Netsmart Technologies, Inc.</name>          </representedOrganization>        </assignedEntity>      </performer>    </serviceEvent>  </documentationOf>  <component>    <structuredBody>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.14" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.14"/>          <code code="47420-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Functional Status"/>          <title>Functional Status</title>          <text>No Results</text>        </section>      </component>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.56"/>          <code code="10190-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Mental Status"/>          <title>Mental Status</title>          <text>No Results</text>        </section>      </component>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.6.1" extension="2015-08-01"/>          <templateId root="2.16.840.1.113883.10.20.22.2.6.1"/>          <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, adverse reactions, alerts"/>          <title>Allergies and Intolerances</title>          <text><table><thead><tr><th>Name</th><th>Onset Date</th><th>Reaction</th><th>Severity</th></tr></thead><tbody><tr><td><content>BEE STING (Allergy)</content></td><td><content>Fri Feb 05 07:00:00 EST 2016</content></td><td><content>Abdominal pain (finding)</content></td><td><content>Severe</content></td></tr><tr><td><content>BEE STING (Allergy)</content></td><td><content>Fri Feb 05 07:00:00 EST 2016</content></td><td><content>Itching</content></td><td><content>Severe</content></td></tr><tr><td><content>DIAMORPHINE (Allergy)</content></td><td><content>Tue May 24 08:00:00 EDT 2016</content></td><td><content>Tremor (finding)</content></td><td><content>Severe</content></td></tr><tr><td><content>DIAMORPHINE (Allergy)</content></td><td><content>Tue May 24 08:00:00 EDT 2016</content></td><td><content>Itching</content></td><td><content>Severe</content></td></tr><tr><td><content>AMOXICILLIN (Allergy)</content></td><td><content>Tue May 24 08:00:00 EDT 2016</content></td><td><content>Constriction in throat (finding)</content></td><td><content>Severe</content></td></tr><tr><td><content>AMOXICILLIN (Allergy)</content></td><td><content>Tue May 24 08:00:00 EDT 2016</content></td><td><content>Hives</content></td><td><content>Severe</content></td></tr><tr><td><content>AMOXICILLIN (Allergy)</content></td><td><content>Tue May 24 08:00:00 EDT 2016</content></td><td><content>Feeling faint (finding)</content></td><td><content>Severe</content></td></tr><tr><td><content>DOG (Allergy)</content></td><td><content>Thu Nov 10 07:00:00 EST 2016</content></td><td><content>Apnea (finding)</content></td><td><content>Mild</content></td></tr><tr><td><content>DOG (Allergy)</content></td><td><content>Thu Nov 10 07:00:00 EST 2016</content></td><td><content>Leg cramp (finding)</content></td><td><content>Mild</content></td></tr><tr><td><content>DOG DANDER (Allergy)</content></td><td><content>Thu Nov 10 07:00:00 EST 2016</content></td><td><content>Rash/Hives</content></td><td><content>Moderate</content></td></tr><tr><td><content>DOG DANDER (Allergy)</content></td><td><content>Thu Nov 10 07:00:00 EST 2016</content></td><td><content>Dyspnea</content></td><td><content>Moderate</content></td></tr><tr><td><content>CHOLINE SALICYLATE (Allergy)</content></td><td><content>Thu Nov 10 07:00:00 EST 2016</content></td><td><content>AV junctional rhythm (disorder)</content></td><td><content>Unknown</content></td></tr><tr><td><content>CHOLINE SALICYLATE (Allergy)</content></td><td><content>Thu Nov 10 07:00:00 EST 2016</content></td><td><content>Asthenia (finding)</content></td><td><content>Unknown</content></td></tr><tr><td><content>PENICILLINS (CLASS) (Allergy)</content></td><td><content>Sat Jan 01 07:00:00 EST 1972</content></td><td><content>Swelling of hand (finding)</content></td><td><content>Severe</content></td></tr><tr><td><content>PENICILLINS (CLASS) (Allergy)</content></td><td><content>Sat Jan 01 07:00:00 EST 1972</content></td><td><content>Itching</content></td><td><content>Severe</content></td></tr><tr><td><content>COTTON (Allergy)</content></td><td><content>Sun Jan 01 07:00:00 EST 1967</content></td><td><content>Itching</content></td></tr><tr><td><content>PENICILLIN V (Allergy)</content></td><td><content>Fri Jan 01 07:00:00 EST 1988</content></td><td><content>Nausea and vomiting (disorder)</content></td><td><content>No Reaction</content></td></tr><tr><td><content>YEAST (Allergy)</content></td><td><content>Sun Jan 01 07:00:00 EST 2006</content></td><td><content>Nausea and vomiting (disorder)</content></td></tr><tr><td><content>ACETOPHENAZINE (Allergy)</content></td><td><content>Fri Jan 01 07:00:00 EST 1999</content></td><td><content>Swelling</content></td><td><content>Severe</content></td></tr><tr><td><content>ACETYLMANDELIC ACID (Allergy)</content></td><td><content>Sat Jan 01 07:00:00 EST 1983</content></td><td><content>Itching purpura (disorder)</content></td><td><content>Moderate</content></td></tr><tr><td><content>MEAT (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 2011</content></td><td><content>Swelling</content></td><td><content>Severe</content></td></tr><tr><td><content>MEAT, TENDERIZED (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 2011</content></td><td/><td><content>Unknown</content></td></tr><tr><td><content>CAT'S CLAW (Allergy)</content></td><td><content>Tue Oct 07 08:00:00 EDT 1980</content></td><td/></tr><tr><td><content>SHEEP SORREL (Allergy)</content></td><td><content>Tue Oct 07 08:00:00 EDT 1980</content></td><td/></tr><tr><td><content>RABBIT DERIVED PRODUCT (Allergy)</content></td><td><content>Sun Oct 07 08:00:00 EDT 1984</content></td><td/><td><content>Severe</content></td></tr><tr><td><content>DOGS (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td><content>Itching</content></td><td><content>Unknown</content></td></tr><tr><td><content>HORSE CHESTNUT STANDARDIZED (Allergy)</content></td><td><content>Wed Oct 08 08:00:00 EDT 1986</content></td><td/><td><content>Unknown</content></td></tr><tr><td><content>HORSE SERUM DERIVED PRODUCT (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td><content>Dyspnea</content></td><td><content>Unknown</content></td></tr><tr><td><content>BOVINE CALF SERUM (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 1983</content></td><td/><td><content>Severe</content></td></tr><tr><td><content>GUINEA PIG DANDER (Allergy)</content></td><td><content>Mon Oct 07 08:00:00 EDT 1985</content></td><td/><td><content>Unknown</content></td></tr><tr><td><content>CATNIP (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 1994</content></td><td/></tr><tr><td><content>MILK THISTLE (Allergy)</content></td><td><content>Fri Oct 08 08:00:00 EDT 1982</content></td><td/></tr><tr><td><content>RITE AID MILK THISTLE (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/></tr><tr><td><content>DANDER (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/></tr><tr><td><content>CHESTNUT BUD (Allergy)</content></td><td><content>Fri Oct 08 08:00:00 EDT 1982</content></td><td/></tr><tr><td><content>RITE AID HAND SANITIZER WITH ALOE (Allergy)</content></td><td><content>Fri Oct 08 08:00:00 EDT 1982</content></td><td/><td><content>Unknown</content></td></tr><tr><td><content>APLICARE ANTISEPTIC GEL HAND RINSE (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/></tr><tr><td><content>PREVIDENT DENTAL RINSE (Allergy)</content></td><td><content>Fri Oct 08 08:00:00 EDT 1982</content></td><td/></tr><tr><td><content>POLYESTER (Allergy)</content></td><td><content>Fri Oct 08 08:00:00 EDT 1982</content></td><td/></tr><tr><td><content>COUCH GRASS (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1992</content></td><td/></tr><tr><td><content>EXTRA ACTION COUGH SYRUP (Allergy)</content></td><td><content>Wed Oct 08 08:00:00 EDT 2003</content></td><td/></tr><tr><td><content>ACIDIC FOODS (Allergy)</content></td><td><content>Sun Oct 07 08:00:00 EDT 1984</content></td><td/></tr><tr><td><content>BEE POLLEN (Allergy)</content></td><td><content>Fri Oct 07 08:00:00 EDT 2005</content></td><td/></tr><tr><td><content>HYLAND'S HAYFEVER (Allergy)</content></td><td><content>Sun Oct 07 08:00:00 EDT 1984</content></td><td/></tr><tr><td><content>HYLAND'S HIVES (Allergy)</content></td><td><content>Mon Oct 08 08:00:00 EDT 1979</content></td><td><content>Rash/Hives</content></td></tr><tr><td><content>ORANGE FLOWER OIL (Allergy)</content></td><td><content>Tue Oct 07 08:00:00 EDT 2008</content></td><td/></tr><tr><td><content>CAULIFLOWER (Allergy)</content></td><td><content>Thu Oct 08 08:00:00 EDT 1998</content></td><td/></tr><tr><td><content>BEER (Allergy)</content></td><td><content>Wed Oct 08 08:00:00 EDT 2003</content></td><td/></tr><tr><td><content>WHEAT PROTEIN (Allergy)</content></td><td><content>Sun Oct 07 08:00:00 EDT 2001</content></td><td/></tr><tr><td><content>CAULIFLOWER (Allergy)</content></td><td><content>Wed Oct 08 08:00:00 EDT 2003</content></td><td/><td><content>Mild</content></td></tr><tr><td><content>PET DANDER (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/><td><content>Mild</content></td></tr><tr><td><content>CORTA-CAP NEEDLE EASE (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/></tr><tr><td><content>ABCIXIMAB (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/><td><content>Mild</content></td></tr><tr><td><content>VITAMIN ABC PLUS SENIOR (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/><td><content>Severe</content></td></tr><tr><td><content>VITAMIN ABC PLUS (Allergy)</content></td><td><content>Fri Oct 08 08:00:00 EDT 1982</content></td><td/><td><content>Mild to moderate</content></td></tr><tr><td><content>CHESTAL HONEY (Allergy)</content></td><td><content>Sun Oct 07 08:00:00 EDT 1984</content></td><td><content>Itching</content></td><td><content>Severe</content></td></tr><tr><td><content>AZO CRANBERRY (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 1983</content></td><td><content>Flushing</content></td><td><content>Mild</content></td></tr><tr><td><content>POLLEN (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/><td><content>No Reaction</content></td></tr><tr><td><content>BARBERRY BARK (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 1983</content></td><td><content>Flushing</content></td><td><content>Mild</content></td></tr><tr><td><content>MILK (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td><content>Itching</content></td><td><content>Severe</content></td></tr><tr><td><content>PEANUTS (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 1983</content></td><td/><td><content>Moderate</content></td></tr><tr><td><content>PEANUT OIL (Allergy)</content></td><td><content>Mon Oct 08 08:00:00 EDT 1990</content></td><td><content>Swelling</content></td><td><content>Mild</content></td></tr><tr><td><content>BEE VENOM (Allergy)</content></td><td><content>Sat Oct 08 08:00:00 EDT 1983</content></td><td/><td><content>Severe</content></td></tr><tr><td><content>BEE VENOM (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/><td><content>Severe</content></td></tr><tr><td><content>PENICILLIN (Allergy)</content></td><td><content>Mon Oct 08 08:00:00 EDT 1979</content></td><td/><td><content>Mild to moderate</content></td></tr><tr><td><content>BRONCHIAL MIST (Allergy)</content></td><td><content>Mon Oct 08 08:00:00 EDT 1979</content></td><td/><td><content>Mild to moderate</content></td></tr><tr><td><content>ETHIODIZED OIL (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/><td><content>Moderate</content></td></tr><tr><td><content>BUPIV/FENTANYL CITR/SOD CL (Allergy)</content></td><td><content>Wed Oct 07 08:00:00 EDT 1981</content></td><td/><td><content>Mild</content></td></tr><tr><td><content>BABY SUNSCREEN SPF 45 (Allergy)</content></td><td><content>Tue Oct 07 08:00:00 EDT 1980</content></td><td/><td><content>Mild</content></td></tr><tr><td><content>GERBER GOOD START WATER (Allergy)</content></td><td><content>Tue Oct 07 08:00:00 EDT 1980</content></td><td/><td><content>Mild</content></td></tr><tr><td><content>PEAS (Allergy)</content></td><td><content>Tue Oct 07 08:00:00 EDT 1980</content></td><td/><td><content>Severe</content></td></tr><tr><td><content>GOOD NEIGHBOR PAIN RELIEVER (Allergy)</content></td><td><content>Mon Jan 30 07:00:00 EST 2023</content></td><td/><td><content>Mild</content></td></tr></tbody></table></text>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.001"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="20160205120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20160205120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.001"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20160205120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20160205070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="37807" codeSystemName="Micromedex" displayName="BEE STING"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.001"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20160205120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="21522001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abdominal pain (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.001"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20160205120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="418290006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Itching"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="24484000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.002"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="20160524120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20160524120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.002"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20160524120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20160524080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="3304" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="heroin&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.002"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20160524120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="26079004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Tremor (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.002"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20160524120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="418290006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Itching"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="2" codeSystem="" codeSystemName="" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.003"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="20160524120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20160524120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.003"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20160524120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20160524080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="723" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="amoxicillin&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.003"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20160524120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="247324004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Constriction in throat (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.003"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20160524120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="247472004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Hives"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.003"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20160524120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="248223005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Feeling faint (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="24484000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.004"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="20161110120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20161110120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.004"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20161110120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20161110070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="37796" codeSystemName="Micromedex" displayName="DOG"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.004"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20161110120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="1023001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Apnea (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.004"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20161110120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="102550009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Leg cramp (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="255604002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Mild"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.005"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20161110120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20161110120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.005"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20161110120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20161110070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="260154005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="DOG DANDER"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.005"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20161110120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="2" displayName="Rash/Hives"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.005"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20161110120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="267036007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Dyspnea"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="3" codeSystem="" codeSystemName="" displayName="Moderate"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.006"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="20161110120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20161110120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.006"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20161110120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20161110070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="20974" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="choline salicylate&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.006"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20161110120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="11849007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="AV junctional rhythm (disorder)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.006"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20161110120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="13791008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Asthenia (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="NTST-Unknown" codeSystem="" codeSystemName="" displayName="Unknown"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.007"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19720101120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19720101120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.007"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19720101120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19720101070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="6369005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Penicillin antibiotic product&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.007"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19720101120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="299037003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Swelling of hand (finding)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.007"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19720101120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="418290006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Itching"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="24484000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.008"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19670101120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19670101120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.008"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19670101120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19670101070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="89889006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="COTTON"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.008"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19670101120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="418290006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Itching"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="" codeSystem="" codeSystemName="" displayName=""/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.009"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19880101120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19880101120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.009"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19880101120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19880101070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="7984" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="penicillin V&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.009"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19880101120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="16932000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nausea and vomiting (disorder)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="NTST-NoReaction" codeSystem="" codeSystemName="" displayName="No Reaction"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.01"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="20060101120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20060101120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.01"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20060101120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20060101070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="412534006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="YEAST"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.01"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20060101120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="16932000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nausea and vomiting (disorder)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="" codeSystem="" codeSystemName="" displayName=""/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.011"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19990101120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19990101120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.011"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19990101120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19990101070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="16735" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="acetophenazine&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.011"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19990101120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="65124004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Swelling"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="2" codeSystem="" codeSystemName="" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.012"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19830101120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19830101120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.012"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19830101120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19830101070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="1430397" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="acetylmandelic acid, (+)-"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.012"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19830101120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="238781005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Itching purpura (disorder)"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="3" codeSystem="" codeSystemName="" displayName="Moderate"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.013"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="20111008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20111008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.013"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20111008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20111008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="28647000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Meat&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.013"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20111008120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="65124004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Swelling"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="24484000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.014"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20111008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20111008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.014"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20111008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20111008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="28647000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Meat&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.015"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19801007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19801007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.015"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19801007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19801007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="285223" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="cat&apos;s claw preparation&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.016"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19801007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19801007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.016"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19801007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19801007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="38288" codeSystemName="Micromedex" displayName="SHEEP SORREL"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.017"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19841007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19841007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.017"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19841007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19841007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="274" codeSystemName="Micromedex" displayName="RABBIT DERIVED PRODUCT"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.018"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.018"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="69986009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="DOGS"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.018"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19811007120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="418290006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Itching"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="NTST-Unknown" codeSystem="" codeSystemName="" displayName="Unknown"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.019"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19861008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19861008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.019"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19861008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19861008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="317825" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="horse chestnut preparation&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.02"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.02"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="277" codeSystemName="Micromedex" displayName="HORSE SERUM DERIVED PRODUCT"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.02"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19811007120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="267036007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Dyspnea"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="NTST-Unknown" codeSystem="" codeSystemName="" displayName="Unknown"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.021"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19831008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19831008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.021"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19831008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19831008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="1426381" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="serum albumin, bovine"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.022"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19851007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19851007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.022"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19851007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19851007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="703927007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="GUINEA PIG DANDER"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.023"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19941008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19941008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.023"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19941008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19941008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="3396" codeSystemName="Micromedex" displayName="CATNIP"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.024"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19821008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.024"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="283579" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="milk thistle extract&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.025"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.025"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="20232" codeSystemName="Micromedex" displayName="RITE AID MILK THISTLE~INACTIVE"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.026"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.026"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="264287008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="DANDER"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.027"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19821008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.027"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="14538" codeSystemName="Micromedex" displayName="CHESTNUT BUD"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.028"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19821008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.028"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="19462" codeSystemName="Micromedex" displayName="RITE AID HAND SANITIZER WITH ALOE~INACTIVE"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.029"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.029"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="20637" codeSystemName="Micromedex" displayName="APLICARE ANTISEPTIC GEL HAND RINSE~INACTIVE"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.03"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19821008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.03"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="352917" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Prevident Dental Rinse&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.031"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19821008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.031"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="8204009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="POLYESTER"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.032"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19921007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19921007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.032"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19921007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19921007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="1344644" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Elymus repens top extract&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.033"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20031008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20031008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.033"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20031008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20031008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="23968" codeSystemName="Micromedex" displayName="EXTRA ACTION COUGH SYRUP~INACTIVE"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.034"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19841007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19841007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.034"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19841007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19841007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="2562" codeSystemName="Micromedex" displayName="ACIDIC FOODS"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.035"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20051007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20051007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.035"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20051007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20051007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="253157" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="bee pollen&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.036"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="confirmed"/>              <effectiveTime>                <low value="19841007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19841007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.036"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19841007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19841007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="16216" codeSystemName="Micromedex" displayName="HYLAND&apos;S HAYFEVER"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.037"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19791008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19791008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.037"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19791008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19791008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="16219" codeSystemName="Micromedex" displayName="HYLAND&apos;S HIVES"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.037"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19791008120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="2" displayName="Rash/Hives"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="" codeSystem="" codeSystemName="" displayName=""/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.038"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="confirmed"/>              <effectiveTime>                <low value="20081007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20081007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.038"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20081007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20081007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="1309230" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="orange oil&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.039"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19981008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19981008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.039"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19981008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19981008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="735336002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Cauliflower&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.04"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="confirmed"/>              <effectiveTime>                <low value="20031008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20031008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.04"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20031008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20031008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="53410008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Beer&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.041"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20011007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20011007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.041"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20011007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20011007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="412071004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Wheat&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.042"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="confirmed"/>              <effectiveTime>                <low value="20031008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20031008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.042"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20031008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20031008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="735336002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Cauliflower&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.043"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.043"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="39367" codeSystemName="Micromedex" displayName="PET DANDER"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.044"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.044"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="6438" codeSystemName="Micromedex" displayName="CORTA-CAP NEEDLE EASE"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.045"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.045"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="83929" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="abciximab&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.046"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.046"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="18808" codeSystemName="Micromedex" displayName="VITAMIN ABC PLUS SENIOR"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.047"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19821008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.047"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="18807" codeSystemName="Micromedex" displayName="VITAMIN ABC PLUS"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.048"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19841007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19841007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.048"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19841007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19841007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="285279" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="honey preparation&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.048"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19841007120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="418290006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Itching"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="2" codeSystem="" codeSystemName="" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.049"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19831008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19831008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.049"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19831008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19831008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="669367" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Azo-Cranberry&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.049"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19831008120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="238810007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Flushing"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="255604002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Mild"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.05"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.05"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="37795" codeSystemName="Micromedex" displayName="POLLEN"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.051"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19831008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19831008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.051"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19831008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19831008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="259404" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="barberry extract&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.051"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19831008120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="238810007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Flushing"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="1" codeSystem="" codeSystemName="" displayName="Mild"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.052"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.052"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="70813002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Milk&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.052"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19811007120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="1" displayName="Itching"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="24484000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Severe"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.053"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19831008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19831008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.053"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19831008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19831008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="762952008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Peanut&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.054"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19901008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19901008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.054"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19901008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19901008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="417889008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Arachis oil&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                  <entryRelationship typeCode="MFST" inversionInd="true">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.9" extension="2014-06-09"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.9"/>                      <id root="2.16.840.1.113883.3.3569.0.90" extension="1||ALG.054"/>                      <code xsi:type="CE" code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="19901008120000"/>                        <high/>                      </effectiveTime>                      <value xsi:type="CD" code="65124004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Swelling"/>                      <entryRelationship typeCode="SUBJ" inversionInd="true">                        <observation classCode="OBS" moodCode="EVN">                          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>                          <templateId root="2.16.840.1.113883.10.20.22.4.8"/>                          <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity Observation"/>                          <statusCode code="completed"/>                          <value xsi:type="CD" code="1" codeSystem="" codeSystemName="" displayName="Mild"/>                        </observation>                      </entryRelationship>                    </observation>                  </entryRelationship>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.055"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19831008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19831008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.055"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19831008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19831008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="124427" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="honey bee venom&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.056"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="inactive"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.056"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="124427" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="honey bee venom&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.057"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19791008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19791008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.057"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19791008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19791008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="39913" codeSystemName="Micromedex" displayName="PENICILLIN"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.058"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19791008120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19791008120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.058"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19791008120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19791008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="215759" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="Bronchial Mist with Pump&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.059"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="suspected"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.059"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="4125" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="ethiodized oil&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.06"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="confirmed"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19811007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.06"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="14206" codeSystemName="Micromedex" displayName="BUPIV/FENTANYL CITR/SOD CL"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.061"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="confirmed"/>              <effectiveTime>                <low value="19801007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19801007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.061"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19801007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19801007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="39749" codeSystemName="Micromedex" displayName="BABY SUNSCREEN SPF 45"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.062"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="confirmed"/>              <effectiveTime>                <low value="19801007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19801007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.062"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19801007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19801007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="25091" codeSystemName="Micromedex" displayName="GERBER GOOD START WATER"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.063"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="unknown"/>              <effectiveTime>                <low value="19801007120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="19801007120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.063"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19801007120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19801007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="260184002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Peas&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>          <entry typeCode="DRIV">            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.30" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.30"/>              <id root="2.16.840.1.113883.3.3569.0.5" extension="1||ALG.064"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20230130120000"/>              </effectiveTime>              <author>                <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                <time value="20230130120000"/>                <assignedAuthor>                  <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                  <addr nullFlavor="UNK"/>                  <telecom nullFlavor="UNK"/>                  <assignedAuthoringDevice>                    <manufacturerModelName>Netsmart</manufacturerModelName>                    <softwareName>CCD Generator</softwareName>                  </assignedAuthoringDevice>                </assignedAuthor>              </author>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.7"/>                  <id root="2.16.840.1.113883.3.3569.0.105.1" extension="1||ALG.064"/>                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20230130120000"/>                  </effectiveTime>                  <value xsi:type="CD" code="419199007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergy to substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20230130070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                  <participant typeCode="CSM">                    <participantRole classCode="MANU">                      <playingEntity classCode="MMAT">                        <code code="198440" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RXNORM" displayName="acetaminophen 500 MG Oral Tablet&#xD;&#xA;"/>                      </playingEntity>                    </participantRole>                  </participant>                </observation>              </entryRelationship>            </act>          </entry>        </section>      </component>      <component>        <section nullFlavor="NI">          <templateId root="2.16.840.1.113883.10.20.22.2.3.1" extension="2015-08-01"/>          <templateId root="2.16.840.1.113883.10.20.22.2.3.1"/>          <code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Results"/>          <title>Results</title>          <text>No Known Laboratory Results</text>        </section>      </component>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.4.1" extension="2015-08-01"/>          <templateId root="2.16.840.1.113883.10.20.22.2.4.1"/>          <code code="8716-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital Signs"/>          <title>Vital Signs</title>          <text><table><thead><tr><th>Vital Sign</th><th>Measurement</th><th>Date</th></tr></thead><tbody><tr><td><content>Temperature</content></td><td><content>100 [DEGF]</content></td><td><content>Fri Jan 06 05:18:00 EST 2023</content></td></tr><tr><td><content>Temperature</content></td><td><content>37.8 CEL</content></td><td><content>Fri Jan 06 05:18:00 EST 2023</content></td></tr><tr><td><content>Temperature Site</content></td><td><content>LA21928-9 </content></td><td><content>Fri Jan 06 05:18:00 EST 2023</content></td></tr><tr><td><content>Temperature</content></td><td><content>101 [DEGF]</content></td><td><content>Fri Jan 06 05:19:00 EST 2023</content></td></tr><tr><td><content>Temperature</content></td><td><content>38.3 CEL</content></td><td><content>Fri Jan 06 05:19:00 EST 2023</content></td></tr><tr><td><content>Temperature Site</content></td><td><content>LA21928-9 </content></td><td><content>Fri Jan 06 05:19:00 EST 2023</content></td></tr><tr><td><content>Temperature</content></td><td><content>104 [DEGF]</content></td><td><content>Mon Jan 09 05:25:00 EST 2023</content></td></tr><tr><td><content>Temperature</content></td><td><content>40 CEL</content></td><td><content>Mon Jan 09 05:25:00 EST 2023</content></td></tr><tr><td><content>Temperature Site</content></td><td><content>LA9367-9 </content></td><td><content>Mon Jan 09 05:25:00 EST 2023</content></td></tr><tr><td><content>Temperature Site</content></td><td><content>LA21928-9 </content></td><td><content>Mon Jan 09 05:25:00 EST 2023</content></td></tr></tbody></table></text>          <entry>            <organizer classCode="CLUSTER" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.26" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.26"/>              <id root="2.16.840.1.113883.3.3569.0.109"/>              <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital Signs">                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs, weight, height, head circumference, oximetry, BMI, and BSA panel"/>              </code>              <statusCode code="completed"/>              <effectiveTime value="20230106101800"/>              <component>                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.27" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                  <id root="2.16.840.1.113883.3.3569.0.108" extension="20230106041800CareFabric66480.154801|||15582"/>                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Temperature"/>                  <statusCode code="completed"/>                  <effectiveTime value="20230106101800"/>                  <value xsi:type="PQ" value="100.0" unit="[DEGF]"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20230106051800-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </component>              <component>                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.27" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                  <id root="2.16.840.1.113883.3.3569.0.108" extension="20230106041800CareFabric66480.154801|||15583"/>                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Temperature"/>                  <statusCode code="completed"/>                  <effectiveTime value="20230106101800"/>                  <value xsi:type="PQ" value="37.8" unit="CEL"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20230106051800-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </component>            </organizer>          </entry>          <entry>            <organizer classCode="CLUSTER" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.26" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.26"/>              <id root="2.16.840.1.113883.3.3569.0.109"/>              <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital Signs">                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs, weight, height, head circumference, oximetry, BMI, and BSA panel"/>              </code>              <statusCode code="completed"/>              <effectiveTime value="20230106101900"/>              <component>                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.27" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                  <id root="2.16.840.1.113883.3.3569.0.108" extension="20230106041900CareFabric66480.155401|||15586"/>                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Temperature"/>                  <statusCode code="completed"/>                  <effectiveTime value="20230106101900"/>                  <value xsi:type="PQ" value="101.0" unit="[DEGF]"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20230106051900-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </component>              <component>                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.27" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                  <id root="2.16.840.1.113883.3.3569.0.108" extension="20230106041900CareFabric66480.155401|||15587"/>                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Temperature"/>                  <statusCode code="completed"/>                  <effectiveTime value="20230106101900"/>                  <value xsi:type="PQ" value="38.3" unit="CEL"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20230106051900-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </component>            </organizer>          </entry>          <entry>            <organizer classCode="CLUSTER" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.26" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.26"/>              <id root="2.16.840.1.113883.3.3569.0.109"/>              <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital Signs">                <translation code="74728-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital signs, weight, height, head circumference, oximetry, BMI, and BSA panel"/>              </code>              <statusCode code="completed"/>              <effectiveTime value="20230109102500"/>              <component>                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.27" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                  <id root="2.16.840.1.113883.3.3569.0.108" extension="20230109042500CareFabric66483.159001|||15590"/>                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Temperature"/>                  <statusCode code="completed"/>                  <effectiveTime value="20230109102500"/>                  <value xsi:type="PQ" value="104.0" unit="[DEGF]"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20230109052500-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </component>              <component>                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.27" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.27"/>                  <id root="2.16.840.1.113883.3.3569.0.108" extension="20230109042500CareFabric66483.159001|||15591"/>                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Temperature"/>                  <statusCode code="completed"/>                  <effectiveTime value="20230109102500"/>                  <value xsi:type="PQ" value="40.0" unit="CEL"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20230109052500-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </component>            </organizer>          </entry>        </section>      </component>      <component>        <section nullFlavor="NI">          <templateId root="2.16.840.1.113883.10.20.22.2.2" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.2"/>          <templateId root="2.16.840.1.113883.10.20.34.2.7"/>          <code code="11369-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of immunizations"/>          <title>Immunizations</title>          <text>No Known Immunizations</text>        </section>      </component>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.17" extension="2015-08-01"/>          <templateId root="2.16.840.1.113883.10.20.22.2.17"/>          <code code="29762-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Social History"/>          <title>Social History</title>          <text><table><thead><tr><th>Social History Observation</th><th>Description</th><th>Date</th></tr></thead><tbody><tr><td><content>Smoking Status</content></td><td><content>Current Some Day Smoker</content></td><td><content>Tue Oct 04 08:00:00 EDT 2022</content></td></tr><tr><td ID="BirthSexInfo"><content>Birth Sex</content></td><td><content>Female</content></td><td><content>Sun Oct 08 08:00:00 EDT 1978</content></td></tr></tbody></table></text>          <entry>            <observation classCode="OBS" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.78"/>              <id root="2.16.840.1.113883.19.5.99999.1"/>              <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>              <statusCode code="completed"/>              <effectiveTime value="20221004120000"/>              <value xsi:type="CD" code="428041000124106" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Occasional tobacco smoker"/>            </observation>          </entry>          <entry>            <observation classCode="OBS" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.200" extension="2014-06-09"/>              <code code="76689-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Sex Assigned At Birth"/>              <text><reference value="#BirthSexInfo"/></text>              <statusCode code="completed"/>              <effectiveTime value="19781008120000"/>              <value xsi:type="CD" code="F" codeSystem="2.16.840.1.113883.5.1" codeSystemName="Gender" displayName="Female"/>            </observation>          </entry>        </section>      </component>      <component>        <section nullFlavor="NI">          <templateId root="2.16.840.1.113883.10.20.22.2.7" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.7"/>          <templateId root="2.16.840.1.113883.10.20.22.2.7.1" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.7.1"/>          <code code="47519-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF PROCEDURES"/>          <title>Procedures</title>          <text>No Known Procedures</text>        </section>      </component>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.10" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.10"/>          <code code="18776-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Treatment Plan"/>          <title>Treatment Plan</title>        </section>      </component>      <component>        <section nullFlavor="NI">          <templateId root="2.16.840.1.113883.10.20.22.2.23" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.23"/>          <code code="46264-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Medical Equipment"/>          <title>Medical Equipment</title>          <text>No Known Medical Equipment</text>        </section>      </component>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.22" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.22.1" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.22.1"/>          <code code="46240-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Encounters"/>          <title>Encounters</title>          <text><table><thead><tr><th>Program Name</th><th>Primary Diagnosis</th><th>Admission Date/Time</th><th>Discharge Date/Time</th></tr></thead><tbody><tr><td><content>Bravo Call Center</content></td><td/><td><content>Mon Mar 01 07:23:00 EST 2021</content></td><td/></tr><tr><td><content>O.P. Mature Adult Psych.</content></td><td/><td><content>Mon May 14 16:31:00 EDT 2018</content></td><td/></tr><tr><td><content>O.P. Mature Adult Psych.</content></td><td/><td><content>Mon May 14 16:31:00 EDT 2018</content></td><td/></tr><tr><td><content>O.P. Child S.A.</content></td><td/><td><content>Thu Apr 19 13:11:00 EDT 2018</content></td><td/></tr><tr><td><content>Inp. Adult Psych.</content></td><td><content>Blue toe syndrome</content></td><td><content>Tue Mar 03 11:46:00 EST 2020</content></td><td/></tr><tr><td><content>O.P. Adolescent Psych.</content></td><td/><td><content>Sat Jan 01 09:51:00 EST 2005</content></td><td/></tr><tr><td><content>O.P. Adult Psych.</content></td><td><content>Depression</content></td><td><content>Mon May 01 16:05:00 EDT 2017</content></td><td/></tr><tr><td><content>O.P. Mature Adult S.A.</content></td><td><content>Ear abrasion</content></td><td><content>Mon Jun 11 16:51:00 EDT 2018</content></td><td/></tr><tr><td><content>Primary Care</content></td><td/><td><content>Tue Jun 16 20:14:00 EDT 2020</content></td><td/></tr><tr><td><content>Partial Adult Psych.</content></td><td/><td><content>Tue Feb 01 14:03:00 EST 2000</content></td><td/></tr></tbody></table></text>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6580.41"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="7533" displayName="Bravo Call Center"/>              </code>              <effectiveTime>                <low value="20210301122300"/>              </effectiveTime>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6478.21"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="303" displayName="O.P. Mature Adult Psych."/>              </code>              <effectiveTime>                <low value="20180514203100"/>              </effectiveTime>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6478.22"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="303" displayName="O.P. Mature Adult Psych."/>              </code>              <effectiveTime>                <low value="20180514203100"/>              </effectiveTime>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6475.71"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="304" displayName="O.P. Child S.A."/>              </code>              <effectiveTime>                <low value="20180419171100"/>              </effectiveTime>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6544.11"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="102" displayName="Inp. Adult Psych."/>              </code>              <effectiveTime>                <low value="20200303164600"/>              </effectiveTime>              <performer>                <assignedEntity classCode="ASSIGNED">                  <id root="2.16.840.1.113883.19.5.99999.1"/>                  <code code="PRF" displayName="Performer"/>                  <assignedPerson>                    <name><given>Dev</given><family>Physician</family></name>                  </assignedPerson>                </assignedEntity>              </performer>              <entryRelationship typeCode="COMP">                <act classCode="ACT" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.80" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.80"/>                  <code xsi:type="CE" code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Encounter Diagnosis"/>                  <entryRelationship typeCode="SUBJ">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                      <id root="2.16.840.1.113883.19.5.99999.1" extension="1327||3318"/>                      <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                        <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                      </code>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20200303164600"/>                        <high value="20200303164600"/>                      </effectiveTime>                      <value xsi:type="CD" code="I75.029" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD10" displayName="Atheroembolism of unspecified lower extremity">                        <translation code="425527003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Atheromatous embolus of lower limb"/>                      </value>                    </observation>                  </entryRelationship>                </act>              </entryRelationship>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||5990.11"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="301" displayName="O.P. Adolescent Psych."/>              </code>              <effectiveTime>                <low value="20050101145100"/>              </effectiveTime>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6440.41"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="302" displayName="O.P. Adult Psych."/>              </code>              <effectiveTime>                <low value="20170501200500"/>              </effectiveTime>              <performer>                <assignedEntity classCode="ASSIGNED">                  <id root="2.16.840.1.113883.19.5.99999.1"/>                  <code code="PRF" displayName="Performer"/>                  <assignedPerson>                    <name><given>Paul</given><family>Allwin</family></name>                  </assignedPerson>                </assignedEntity>              </performer>              <entryRelationship typeCode="COMP">                <act classCode="ACT" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.80" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.80"/>                  <code xsi:type="CE" code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Encounter Diagnosis"/>                  <entryRelationship typeCode="SUBJ">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                      <id root="2.16.840.1.113883.19.5.99999.1" extension="160||192"/>                      <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                        <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                      </code>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20170501150000"/>                        <high value="20170501150000"/>                      </effectiveTime>                      <value xsi:type="CD" code="F32.9" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD10" displayName="Major depressive disorder, single episode, unspecified"/>                    </observation>                  </entryRelationship>                </act>              </entryRelationship>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6481.01"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="307" displayName="O.P. Mature Adult S.A."/>              </code>              <effectiveTime>                <low value="20180611205100"/>              </effectiveTime>              <entryRelationship typeCode="COMP">                <act classCode="ACT" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.80" extension="2014-06-09"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.80"/>                  <code xsi:type="CE" code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Encounter Diagnosis"/>                  <entryRelationship typeCode="SUBJ">                    <observation classCode="OBS" moodCode="EVN">                      <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                      <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                      <id root="2.16.840.1.113883.19.5.99999.1" extension="503||932"/>                      <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                        <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                      </code>                      <statusCode code="completed"/>                      <effectiveTime>                        <low value="20180620215400"/>                        <high value="20180620215400"/>                      </effectiveTime>                      <value xsi:type="CD" code="S00.419A" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD10" displayName="Abrasion of unspecified ear, initial encounter">                        <translation code="283051009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED" displayName="Abrasion of ear region"/>                      </value>                    </observation>                  </entryRelationship>                </act>              </entryRelationship>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||6554.61"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="9" displayName="Primary Care"/>              </code>              <effectiveTime>                <low value="20200617001400"/>              </effectiveTime>            </encounter>          </entry>          <entry>            <encounter classCode="ENC" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09"/>              <templateId root="2.16.840.1.113883.10.20.22.4.49"/>              <id root="2.16.840.1.113883.3.3569.0.23" extension="1||5810.51"/>              <code code="99499" codeSystem="2.16.840.1.113883.3.88.12.80.32" codeSystemName="CPT" displayName="Unlisted evaluation and management service">                <translation code="401" displayName="Partial Adult Psych."/>              </code>              <effectiveTime>                <low value="20000201190300"/>              </effectiveTime>            </encounter>          </entry>        </section>      </component>      <component>        <section nullFlavor="NI">          <templateId root="2.16.840.1.113883.10.20.22.2.1" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.1"/>          <templateId root="2.16.840.1.113883.10.20.22.2.1.1" extension="2014-06-09"/>          <templateId root="2.16.840.1.113883.10.20.22.2.1.1"/>          <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of medication use Narrative"/>          <title>Medications</title>          <text>No Known Medication Information</text>        </section>      </component>      <component>        <section>          <templateId root="2.16.840.1.113883.10.20.22.2.5.1" extension="2015-08-01"/>          <templateId root="2.16.840.1.113883.10.20.22.2.5.1"/>          <code code="11450-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Problem list - Reported"/>          <title>Problems</title>          <text><paragraph>Active Concerns</paragraph><list><item>Anxiety<list><item> Code: 48694002</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Cellulitis of external nose<list><item> Code: 37098000</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Citrullinemia<list><item> Code: 398680004</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Injury of head<list><item> Code: 82271004</item><item> Start Date: Fri Oct 05 08:00:00 EDT 1990</item><item> End Date: </item><item> Text: </item></list></item><item>Face blindness<list><item> Code: 18358003</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Face abrasion, infected<list><item> Code: 210992005</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Homeless<list><item> Code: 32911000</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Cough<list><item> Code: 49727002</item><item> Start Date: Sun Dec 18 07:00:00 EST 2016</item><item> End Date: </item><item> Text: </item></list></item><item>Aching pain<list><item> Code: 27635008</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Finger abrasion, infected<list><item> Code: 211320007</item><item> Start Date: Sat Dec 29 07:00:00 EST 1973</item><item> End Date: </item><item> Text: </item></list></item><item>Pain<list><item> Code: 22253000</item><item> Start Date: Sat Dec 22 07:00:00 EST 2001</item><item> End Date: </item><item> Text: </item></list></item><item>Fatigue<list><item> Code: 84229001</item><item> Start Date: Sun Dec 18 07:00:00 EST 2016</item><item> End Date: </item><item> Text: </item></list></item><item>Cold agglutinin disease<list><item> Code: 398937006</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Disorder of the nose<list><item> Code: 89488007</item><item> Start Date: Sun Dec 18 07:00:00 EST 2016</item><item> End Date: </item><item> Text: </item></list></item><item>Disorder of stomach<list><item> Code: 29384001</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Allergic disposition<list><item> Code: 609328004</item><item> Start Date: Mon Sep 25 08:00:00 EDT 2017</item><item> End Date: </item><item> Text: </item></list></item><item>Depressive disorder<list><item> Code: 35489007</item><item> Start Date: Fri Oct 20 08:00:00 EDT 2017</item><item> End Date: </item><item> Text: </item></list></item><item>Fatigue<list><item> Code: 84229001</item><item> Start Date: Wed Dec 13 07:00:00 EST 2017</item><item> End Date: </item><item> Text: </item></list></item><item>High blood hemoglobin A2<list><item> Code: 131141003</item><item> Start Date: Thu Oct 03 08:00:00 EDT 1996</item><item> End Date: </item><item> Text: </item></list></item><item>Acute tension headache<list><item> Code: 398057008</item><item> Start Date: Thu Feb 22 07:00:00 EST 2018</item><item> End Date: </item><item> Text: </item></list></item><item>Bite of nonvenomous arthropod<list><item> Code: 217706007</item><item> Start Date: Mon Oct 02 08:00:00 EDT 2000</item><item> End Date: </item><item> Text: </item></list></item><item>Injury<list><item> Code: 417163006</item><item> Start Date: Thu Oct 07 08:00:00 EDT 1982</item><item> End Date: </item><item> Text: </item></list></item><item>Hand disorder<list><item> Code: 118933004</item><item> Start Date: Tue Oct 06 08:00:00 EDT 1987</item><item> End Date: </item><item> Text: </item></list></item><item>Ear cartilage deformity<list><item> Code: 2204004</item><item> Start Date: Mon Oct 08 08:00:00 EDT 1979</item><item> End Date: </item><item> Text: </item></list></item><item>Head bangings<list><item> Code: 43954004</item><item> Start Date: Sat Sep 29 08:00:00 EDT 2012</item><item> End Date: </item><item> Text: </item></list></item><item>Head and face pain<list><item> Code: 95668009</item><item> Start Date: Fri Oct 07 08:00:00 EDT 1983</item><item> End Date: </item><item> Text: </item></list></item><item>Other symptoms and signs involving the musculoskeletal system<list><item> Code: </item><item> Start Date: Sat Oct 06 08:00:00 EDT 1984</item><item> End Date: </item><item> Text: </item></list></item><item>Malignant neoplasm of head, face and neck<list><item> Code: </item><item> Start Date: Fri Oct 07 08:00:00 EDT 1983</item><item> End Date: </item><item> Text: </item></list></item><item>Bee sting reaction<list><item> Code: 241820008</item><item> Start Date: Mon Oct 06 08:00:00 EDT 1986</item><item> End Date: </item><item> Text: </item></list></item><item>Foot abrasion, non-infected<list><item> Code: 24328004</item><item> Start Date: Wed Oct 07 08:00:00 EDT 1981</item><item> End Date: </item><item> Text: </item></list></item><item>Ankle abrasion<list><item> Code: 211334007</item><item> Start Date: Sun Oct 06 08:00:00 EDT 1985</item><item> End Date: </item><item> Text: </item></list></item><item>Nose colonized with MRSA<list><item> Code: 312210001</item><item> Start Date: Thu Oct 07 08:00:00 EDT 1982</item><item> End Date: </item><item> Text: </item></list></item><item>H disease<list><item> Code: 80902009</item><item> Start Date: Tue Oct 02 08:00:00 EDT 2001</item><item> End Date: </item><item> Text: </item></list></item><item>Yaba pox virus disease<list><item> Code: 33090006</item><item> Start Date: Wed Oct 02 08:00:00 EDT 2002</item><item> End Date: </item><item> Text: </item></list></item><item>Abnormal head movements<list><item> Code: 271799000</item><item> Start Date: Tue Jul 03 08:00:00 EDT 2018</item><item> End Date: </item><item> Text: </item></list></item><item>Test anxiety<list><item> Code: 198288003</item><item> Start Date: Fri Oct 19 08:00:00 EDT 2018</item><item> End Date: </item><item> Text: </item></list></item><item>Eating disorder affecting pregnancy, antepartum<list><item> Code: 72366004</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item><item> Text: </item></list></item><item>Hyper IgM syndrome<list><item> Code: 82286005</item><item> Start Date: Tue Nov 06 07:00:00 EST 2018</item><item> End Date: </item><item> Text: </item></list></item><item>APN (acute pyelonephritis)<list><item> Code: 36689008</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Problem associated with amniotic cavity and membranes<list><item> Code: 72860003</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>1st deg burn chest wall<list><item> Code: 46156007</item><item> Start Date: Thu Feb 07 07:00:00 EST 2019</item><item> End Date: </item><item> Text: </item></list></item><item>Eating dirt<list><item> Code: 5917004</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Chest pain with moderate risk for cardiac etiology<list><item> Code: 29857009</item><item> Start Date: Fri May 17 08:00:00 EDT 2019</item><item> End Date: </item><item> Text: </item></list></item><item>Seal bite<list><item> Code: 770957005</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Venomous snakes and lizards causing poisoning and toxic reactions<list><item> Code: 57431005</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>BRBPR (bright red blood per rectum)<list><item> Code: 74474003</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Essential (primary) hypertension<list><item> Code: </item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Cancer phobia<list><item> Code: 34563004</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Struck by falling object due to accident to fishing boat<list><item> Code: 215540009</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>New England type neurogenic scapuloperoneal amyotrophy<list><item> Code: 230248006</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Sprain of anterior cruciate ligament of unspecified knee, initial encounter<list><item> Code: 127292004</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Other eccrine sweat disorders<list><item> Code: </item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Struck accidentally during sports<list><item> Code: 217849004</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Adenocarcinoma, junction of hard and soft palate<list><item> Code: 274084007</item><item> Start Date: Fri Jun 19 08:00:00 EDT 2020</item><item> End Date: </item><item> Text: </item></list></item><item>ACL sprain<list><item> Code: 127292004</item><item> Start Date: Wed Jul 01 08:00:00 EDT 2020</item><item> End Date: </item><item> Text: </item></list></item><item>Hyperacusis, unspecified ear<list><item> Code: 25289003</item><item> Start Date: Mon Jul 06 08:00:00 EDT 2020</item><item> End Date: </item><item> Text: </item></list></item><item>Unspecified asthma, uncomplicated<list><item> Code: </item><item> Start Date: Wed Jul 01 08:00:00 EDT 2020</item><item> End Date: </item><item> Text: </item></list></item><item>Blue toe syndrome<list><item> Code: 425527003</item><item> Start Date: Wed Jul 22 08:00:00 EDT 2020</item><item> End Date: </item><item> Text: </item></list></item><item>Trauma and stressor-related disorder<list><item> Code: 47505003</item><item> Start Date: Wed Jul 01 08:00:00 EDT 2020</item><item> End Date: </item><item> Text: </item></list></item><item>Bipolar 2 disorder, major depressive episode<list><item> Code: 16295005</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Traumatic arthritis of ankle<list><item> Code: 201954006</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Anemia<list><item> Code: 271737000</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Brain atrophy<list><item> Code: 278849000</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Head, face &amp; neck injury<list><item> Code: 282749008</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Seasonal allergic conjunctivitis<list><item> Code: 231855007</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>ASD (atrial septal defect)<list><item> Code: 70142008</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Heart abnormality<list><item> Code: 56265001</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Heart palpitations<list><item> Code: 80313002</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Sea sickness<list><item> Code: 18530007</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Zeta-chain-associated protein (ZAP) 70 kD deficiency<list><item> Code: 716716001</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Mutation in KIAA2022 gene<list><item> Code: 55446002</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Zika fever<list><item> Code: 3928002</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Witteveen-Kolk syndrome<list><item> Code: 110359009</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Test diet monitoring encounter<list><item> Code: 305058001</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>84764||66126<list><item> Code: </item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>84764||66126<list><item> Code: </item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Headache, unspecified<list><item> Code: 25064002</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item><item>Major depressive disorder, single episode, unspecified<list><item> Code: 36923009</item><item> Start Date: </item><item> End Date: </item><item> Text: </item></list></item></list><paragraph>Resolved Concerns</paragraph><list><item> Problem Burns of multiple sites<list><item> Code: 10132008</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Nasal discharge<list><item> Code: 64531003</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion and/or friction burn of nose with infection<list><item> Code: 72512006</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Bone necrosis<list><item> Code: 240196003</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Finger joint effusion<list><item> Code: 298152001</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abarognosis<list><item> Code: 106134006</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Fracture of ankle<list><item> Code: 16114001</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Other contact with raccoon, initial encounter<list><item> Code: 77588008</item><item> Start Date: Sat Sep 29 08:00:00 EDT 2012</item><item> End Date: </item></list></item><item> Problem Horse bite<list><item> Code: 283784003</item><item> Start Date: Tue Oct 07 08:00:00 EDT 1980</item><item> End Date: </item></list></item><item> Problem Head ache<list><item> Code: 25064002</item><item> Start Date: Wed Oct 02 08:00:00 EDT 2002</item><item> End Date: </item></list></item><item> Problem L1 vertebral fracture<list><item> Code: 721494003</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem L1 vertebral fracture<list><item> Code: 721494003</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Eating disorder in remission<list><item> Code: 427469003</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Eating disorder in remission<list><item> Code: 427469003</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Hoarding behavior<list><item> Code: 248025009</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Bite<list><item> Code: 283682007</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Hoarse<list><item> Code: 50219008</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Need for 23-polyvalent pneumococcal polysaccharide vaccine<list><item> Code: 723620004</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Apnea<list><item> Code: 1023001</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem ABCB11-related intrahepatic cholestasis of pregnancy, autosomal dominant<list><item> Code: 235888006</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Apnea, transient<list><item> Code: 1023001</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Apnea, transient<list><item> Code: 1023001</item><item> Start Date: Mon Oct 22 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Bitten by alligator, subsequent encounter<list><item> Code: 283838000</item><item> Start Date: Wed Oct 24 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Bitten by alligator, subsequent encounter<list><item> Code: 283838000</item><item> Start Date: Wed Oct 24 08:00:00 EDT 2018</item><item> End Date: </item></list></item><item> Problem Light and infrequent menstruation<list><item> Code: 386704007</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem APN (acute pyelonephritis)<list><item> Code: 36689008</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem High 18-hydroxycorticosterone/aldosterone ratio<list><item> Code: 127360003</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem High 18-hydroxycorticosterone/aldosterone ratio<list><item> Code: 127360003</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem ABC (aneurysmal bone cyst)<list><item> Code: 203468000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Sealpox<list><item> Code: 414017008</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Bite, snake, venomous<list><item> Code: 238457002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Feeling poorly<list><item> Code: 82832008</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Toadstool, toxicity<list><item> Code: 86505009</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Pilonidal cyst<list><item> Code: 47639008</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Pain crisis<list><item> Code: 39565009</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Pain crisis<list><item> Code: 39565009</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Fracture, ankle<list><item> Code: 16114001</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Abrasion of nose<list><item> Code: 283052002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Cardiac arrest due to underlying cardiac condition<list><item> Code: 423191000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Cardiac arrest due to underlying cardiac condition<list><item> Code: 423191000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Seizure<list><item> Code: 91175000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem 50-59% body surface burn<list><item> Code: 64647005</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Anemia<list><item> Code: 271737000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Anemia<list><item> Code: 271737000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Asthma<list><item> Code: 195967001</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Anemia<list><item> Code: 271737000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Asthma<list><item> Code: 195967001</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Spacecraft collision injuring occupant, sequela<list><item> Code: 19717001</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Sea-blue histiocyte syndrome<list><item> Code: 37821003</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Testicle swelling<list><item> Code: 438457000</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem FAS (fetal alcohol syndrome)<list><item> Code: 205788004</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Free weights<list><item> Code: 129861002</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Gets lost in familiar location<list><item> Code: 247664009</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Unable to get pregnant, female<list><item> Code: 6738008</item><item> Start Date: </item><item> End Date: </item></list></item><item> Problem Metatarsalgia<list><item> Code: 10085004</item><item> Start Date: </item><item> End Date: </item></list></item></list></text>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00006"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00006"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="10132008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Burns of multiple sites"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00009"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00009"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="48694002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Anxiety"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00014"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00014"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="64531003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nasal discharge"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00015"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00015"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00016"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00016"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="72512006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion and/or friction burn of nose with infection"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00018"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00018"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="37098000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cellulitis of external nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00019"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00019"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="398680004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Citrullinemia"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00024"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19901005120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00024"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19901005120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="82271004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Injury of head"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19901005080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00025"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00025"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="18358003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Face blindness"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00031"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00031"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="240196003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Bone necrosis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00034"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00034"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="210992005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Face abrasion, infected"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00036"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00036"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="298152001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finger joint effusion"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00065"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00065"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="32911000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Homeless"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00066"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20161218120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00066"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20161218120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="49727002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cough"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20161218070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00067"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00067"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="27635008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Aching pain"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00069"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19731229120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00069"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19731229120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="211320007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Finger abrasion, infected"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19731229070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0007"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20011222120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0007"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20011222120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="22253000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pain"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20011222070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00071"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00071"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="106134006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abarognosis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00072"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20161218120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00072"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20161218120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="84229001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fatigue"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20161218070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00073"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00073"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="398937006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cold agglutinin disease"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00074"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20161218120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00074"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20161218120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="89488007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Disorder of the nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20161218070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00075"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00075"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="29384001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Disorder of stomach"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00079"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00079"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="16114001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fracture of ankle"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00081"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20170925120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00081"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20170925120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="609328004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Allergic disposition"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20170925080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00082"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20171020120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00082"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20171020120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="35489007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Depressive disorder"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20171020080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00083"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20171213120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00083"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20171213120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="84229001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fatigue"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20171213070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00084"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19961003120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00084"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19961003120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="131141003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Increased hemoglobin"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19961003080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00088"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20180222120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00088"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20180222120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="398057008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Tension-type headache"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20180222070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00089"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20120929120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00089"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20120929120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="77588008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Exposure to animate mechanical force"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20120929080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0009"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="19801007120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0009"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19801007120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283784003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Horse bite wound"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19801007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00093"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20001002120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00093"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20001002120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="217706007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Bite of nonvenomous arthropod"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20001002080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00095"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821007120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00095"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821007120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="417163006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Traumatic AND/OR non-traumatic injury"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.001"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19871006120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.001"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19871006120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="118933004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Disorder of hand"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19871006080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00101"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19791008120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00101"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19791008120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="2204004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Acquired deformity of pinna"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19791008080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00106"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20120929120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00106"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20120929120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="43954004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Head-banging"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20120929080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00107"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19831007120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00107"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19831007120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="95668009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pain in face"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19831007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00108"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19841006120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00108"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19841006120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19841006080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00109"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19831007120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00109"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19831007120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19831007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00115"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19861006120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00115"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19861006120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="241820008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Bee sting"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19861006080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00116"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19811007120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00116"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19811007120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="24328004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion and/or friction burn of foot without infection"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19811007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00117"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19851006120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00117"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19851006120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="211334007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion, ankle"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19851006080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00118"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="19821007120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00118"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="19821007120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="312210001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Methicillin resistant staphylococcus aureus positive"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="19821007080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00121"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20011002120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00121"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20011002120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="80902009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Neutral 1 amino acid transport defect"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20011002080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00122"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20021002120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00122"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20021002120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="33090006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Yabapox"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20021002080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00127"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20180703120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00127"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20180703120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="271799000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Head movements abnormal"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20180703080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00128"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20021002120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00128"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20021002120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="25064002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Headache"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20021002080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00129"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20181019120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00129"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181019120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="198288003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Anxiety state"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181019080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0013"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0013"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="721494003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fracture of first lumbar vertebra"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00131"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00131"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="721494003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fracture of first lumbar vertebra"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00132"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00132"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="72366004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Eating disorder"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00133"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00133"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="427469003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Eating disorder in remission"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00134"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00134"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="427469003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Eating disorder in remission"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00135"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00135"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="248025009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Hoarding"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00136"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00136"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283682007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Bite - wound"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00137"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00137"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="50219008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Hoarse"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00138"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00138"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="723620004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Requires vaccination"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00139"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00139"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="1023001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Apnea"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0014"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0014"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="235888006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cholestasis of pregnancy"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00141"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00141"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="1023001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Apnea"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00142"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181022120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00142"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181022120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="1023001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Apnea"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181022080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00143"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181024120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00143"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181024120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283838000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Reptile bite wound"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181024080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00144"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime>                <low value="20181024120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00144"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181024120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283838000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Reptile bite wound"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181024080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00145"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20181106120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00145"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20181106120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="82286005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Hyperimmunoglobulin M syndrome"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20181106070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00146"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00146"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="386704007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Light and infrequent menstruation"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00149"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00149"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="36689008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Acute pyelonephritis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0015"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0015"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="36689008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Acute pyelonephritis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00152"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00152"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="72860003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Disorder of amniotic cavity AND/OR membrane"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00154"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00154"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="127360003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abnormal quantity of physiologic substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00155"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00155"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="127360003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abnormal quantity of physiologic substance"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00156"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20190207120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00156"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20190207120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="46156007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Burn erythema of chest wall"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20190207070000-0500"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00157"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00157"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="203468000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Aneurysmal bone cyst"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00158"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00158"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="5917004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Geophagia"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00159"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20190517120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00159"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20190517120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="29857009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Chest pain"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20190517080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0016"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0016"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="770957005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Bite of seal"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00161"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00161"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="414017008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Disease due to Parapoxvirus"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00162"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00162"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="238457002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Venomous snake bite"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00163"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00163"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="57431005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Poisoning due to reptile venom"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00164"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00164"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="82832008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="General body state finding"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00165"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00165"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="86505009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Toxic effect from eating mushrooms"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00166"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00166"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="47639008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pilonidal cyst"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00431"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00431"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="39565009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pain crisis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00432"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00432"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="39565009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pain crisis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00433"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00433"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="74474003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Gastrointestinal hemorrhage"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00434"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00434"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00435"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00435"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="34563004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fear of getting cancer"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00436"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00436"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="215540009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Hit by falling object due to accident to watercraft"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00437"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00437"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="230248006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Scapuloperoneal spinal muscular atrophy"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00438"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00438"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="127292004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Sprain of anterior cruciate ligament of knee"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00439"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00439"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="16114001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fracture of ankle"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0044"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0044"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00441"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00441"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00442"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00442"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00443"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00443"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00444"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00444"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00445"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00445"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00446"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00446"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="283052002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Abrasion of nose"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00447"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00447"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00448"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00448"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="217849004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Accidentally struck by or against person or object in sports"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00449"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00449"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="423191000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cardiac arrest due to cardiac disorder"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0045"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0045"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="423191000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cardiac arrest due to cardiac disorder"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00451"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00451"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="91175000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Seizure"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00452"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20200619120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00452"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20200619120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="274084007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Palate carcinoma"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20200619080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00453"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00453"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="64647005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Burn any degree involving 50-59 percent of body surface"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00454"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20200701120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00454"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20200701120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="127292004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Sprain of anterior cruciate ligament of knee"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20200701080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00455"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20200706120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00455"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20200706120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="25289003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Hyperacusis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20200706080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00456"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20200701120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00456"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20200701120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20200701080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00457"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20200722120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00457"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20200722120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="425527003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Atheromatous embolus of lower limb"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20200722080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00458"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime>                <low value="20200701120000"/>              </effectiveTime>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00458"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low value="20200701120000"/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="47505003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Posttraumatic stress disorder"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time value="20200701080000-0400"/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00459"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00459"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="16295005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Bipolar II disorder, most recent episode major depressive"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0046"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0046"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="201954006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Traumatic arthropathy-ankle"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00461"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00461"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="271737000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Anemia"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00462"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00462"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="271737000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Anemia"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00463"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00463"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="271737000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Anemia"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00464"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00464"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="195967001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Asthma"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00465"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00465"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="271737000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Anemia"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00466"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00466"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="195967001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Asthma"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00467"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00467"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="278849000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cerebral atrophy"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00468"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00468"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="282749008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Head and neck injury"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00469"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00469"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="231855007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Seasonal allergic conjunctivitis"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0047"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0047"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="70142008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Atrial septal defect"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00471"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00471"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="19717001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Victim of spacecraft accident"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00472"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00472"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="56265001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Heart disease"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00473"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00473"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="80313002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Palpitations"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00474"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00474"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="18530007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Sea sickness"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00475"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00475"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="716716001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Deficiency of Zeta-chain associated protein kinase 70"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00476"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00476"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="55446002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Genetic mutation"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00477"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00477"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="3928002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Zika virus disease"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00478"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00478"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="110359009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Intellectual disability"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00479"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00479"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="37821003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Sea-blue histiocyte syndrome"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0048"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0048"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="305058001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Patient encounter status"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00481"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00481"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="438457000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Swelling of testicle"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00482"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00482"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="205788004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Fetal alcohol syndrome"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00483"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00483"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="129861002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Physical activity finding"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00484"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00484"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="247664009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Getting lost"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00485"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00485"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="6738008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Female infertility"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00487"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="completed"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00487"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="10085004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Metatarsalgia"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00488"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00488"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00489"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00489"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.0049"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.0049"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="25064002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Headache"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>          <entry>            <act classCode="ACT" moodCode="EVN">              <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01"/>              <templateId root="2.16.840.1.113883.10.20.22.4.3"/>              <id root="2.16.840.1.113883.3.3569.0.78" extension="1||PL.00491"/>              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" codeSystemName="HL7ActClass" displayName="Concern"/>              <statusCode code="active"/>              <effectiveTime/>              <entryRelationship typeCode="SUBJ">                <observation classCode="OBS" moodCode="EVN">                  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>                  <templateId root="2.16.840.1.113883.10.20.22.4.4"/>                  <id root="2.16.840.1.113883.19.5.99999.1" extension="1||PL.00491"/>                  <code code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint">                    <translation code="409586006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Complaint"/>                  </code>                  <statusCode code="completed"/>                  <effectiveTime>                    <low/>                    <high nullFlavor="UNK"/>                  </effectiveTime>                  <value xsi:type="CD" code="36923009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Major depression, single episode"/>                  <author>                    <templateId root="2.16.840.1.113883.10.20.22.4.119"/>                    <time/>                    <assignedAuthor>                      <id root="2.16.840.1.113883.3.3569.0.152" extension="tempExtension"/>                      <addr nullFlavor="UNK"/>                      <telecom nullFlavor="UNK"/>                      <assignedAuthoringDevice>                        <manufacturerModelName>Netsmart</manufacturerModelName>                        <softwareName>CCD Generator</softwareName>                      </assignedAuthoringDevice>                    </assignedAuthor>                  </author>                </observation>              </entryRelationship>            </act>          </entry>        </section>      </component>    </structuredBody>  </component></ClinicalDocument>",
    				"documentType": {
    					"name": "text/xml"
    				},
    				"name": "attachment_1.xml"
    			}
    		],
    		"recipients": "jamespike15@tag.netsmartdirect.net",
    		"subject": "test",
    		"itemType": "MESSAGE",
    		"patientId": "1",
    		"userId": "SYSADM",
    		"ntstOrgId": "dev-pov"
    	},
    	"userId": "SYSADM"
    }
parameters: []
headers:
  - name: Content-Type
    value: application/json
    id: pair_f4722d4e416d40e5bffe060c3a3dd414
  - id: pair_d1a204838e88491b995797256b248090
    name: Auth_Token
    value: bearer
      eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJjY2luYm94IiwiZXhwIjoxNjk0Njk5NTY5LCJudHN0T3JnSWQiOiJkZXYtcG92IiwidXNlcklkIjoiU1lTQURNIiwic291cmNlSXAiOiIyMC4yMjEuMjIyLjE5NiIsInVzZXJBZ2VudCI6Ik1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC4wLjAgU2FmYXJpLzUzNy4zNiBFZGcvMTE2LjAuMTkzOC44MSIsIm1lbWJlcklkIjoiODIifQ.8pZ62Zcjgho79I9_K6ecORK4V6g98HPbZkdfWOEhvUU_67tQxNiJkMq4hV4mbBlaiM3_7zr50HLWKuasrrDt_w
    description: ""
  - id: pair_84a878926f234a7e8c14c037ed146f6c
    name: "X-Ntst-Pov-Auth-Org-Id:"
    value: dev-pov
    description: ""
  - id: pair_6015d5189576470c8344c2f522c70487
    name: User-Agent
    value: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like
      Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.81
    description: ""
  - id: pair_8cd05b3cbb7648f1b94f8527d7246294
    name: X-Ntst-Pov-Auth-Org-Id
    value: dev-pov
    description: ""
  - id: pair_cfb27ecb2db340c68605843d16dd5324
    name: X-Pov-Cc-Member-Id
    value: "82"
    description: ""
authentication: {}
metaSortKey: -1694691755541
isPrivate: false
settingStoreCookies: true
settingSendCookies: true
settingDisableRenderRequestBody: false
settingEncodeUrl: true
settingRebuildPath: true
settingFollowRedirects: global
